stages:
  - build
  - docker
  - release

build:
  stage: docker
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
  script:
    - docker build . --pull -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}"
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}"
  rules:
    - changes:
        - src/**/*
        - public/**/*
        - tests/**/*
        - Dockerfile
        - next.config.mjs
        - package.json
        - package-lock.json
        - postcss.config.js
        - jest.config.ts
        - gitlab-ci.yaml

tag-version:
  stage: release
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - version=$(awk -F'"' '/"version"/ { print $4 }' package.json)
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
  script: |
    docker pull "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"
    docker tag "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}" "${CI_REGISTRY_IMAGE}:${version}"
    docker push "${CI_REGISTRY_IMAGE}:${version}"
    docker tag "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}" "${CI_REGISTRY_IMAGE}:latest"
    docker push "${CI_REGISTRY_IMAGE}:latest"
  needs:
    - build
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^\d+.\d+.\d+$/

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG
